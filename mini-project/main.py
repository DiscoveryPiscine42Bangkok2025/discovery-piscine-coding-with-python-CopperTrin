# Test Case
# 1. Empty board except king
# ....
# ..K.
# ....
# ....
# 2. Pawn attacking king
# ....
# ..K.
# .P..
# ....
# 3. Pawn on board but not attacking
# ....
# ..K.
# ..P.
# ....
# 4. Bishop attacking king
# B...
# ....
# ..K.
# ....
# 5. Bishop blocked by piece
# B...
# .P..
# ..K.
# ....
# 6. Rook attacking king
# R..K
# ....
# ....
# ....
# 7. Rook blocked
# R.PK
# ....
# ....
# ....
# 8. Queen attacking diagonally
# Q...
# ....
# ..K.
# ....
# 9. Queen attacking horizontally
# Q..K
# ....
# ....
# ....
# 10. Multiple attackers
# Q..K
# ..B.
# .P..
# ....
# 11. Large board with far attacker
# ........
# ........
# ........
# ....K...
# ........
# ...Q....
# ........
# ........
# 12. Board not NxN
# K..
# ..Q
# 13. No King present
# ....
# ..Q.
# ....
# ....
# 14. Unsupported piece
# ....
# ..K.
# ..N.
# ....
# 15. Multiple kings
# ....
# ..K.
# ..K.
# ....
# 18. 2x2 board with rook
# KR
# ..
from checkmate import checkmate

def main():
    board = """\
R...
.K..
....
..B.\
"""
    checkmate(board)

if __name__ == "__main__":
    main()